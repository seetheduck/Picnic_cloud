plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // QueryDSL 플러그인 추가
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // Selenium Java 의존성
    implementation 'org.seleniumhq.selenium:selenium-java:4.11.0'
    // (선택 사항) WebDriverManager를 사용해 드라이버를 자동 관리
    implementation 'io.github.bonigarcia:webdrivermanager:5.5.3'
    // Lombok 관련 의존성
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // QueryDSL 관련 의존성
    implementation 'com.querydsl:querydsl-jpa:5.0.0'  // QueryDSL JPA 모듈
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'  // QueryDSL APT 모듈
    
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDir querydslDir
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

tasks.named('test') {
	useJUnitPlatform()
}
