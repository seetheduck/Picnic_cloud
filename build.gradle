plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
repositories {
	mavenCentral()
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    // 비밀번호 암호화
    implementation 'commons-codec:commons-codec:1.15'
	// Selenium Java 의존성
    implementation 'org.seleniumhq.selenium:selenium-java:4.11.0'
	// (선택 사항) WebDriverManager를 사용해 드라이버를 자동 관리
    implementation 'io.github.bonigarcia:webdrivermanager:5.5.3'
    // Apache Commons CSV 의존성 추가
    implementation 'org.apache.commons:commons-csv:1.8'
    // MariaDB JDBC 드라이버 의존성 추가
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
tasks.named('test') {
    useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}